@model BevoBnB.Models.Reservation

@{
    ViewData["Title"] = "Edit Reservation";
}

<h1>Edit Reservation</h1>

<h4>Reservation</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <!-- Display alert message if applicable -->
        @if (!string.IsNullOrEmpty(ViewBag.AlertMessage as string))
        {
            <div class="alert alert-info">
                @ViewBag.AlertMessage
            </div>
        }

        <!-- Display error messages -->
        @if (ViewBag.ErrorMessages != null && ViewBag.ErrorMessages is List<string> && ((List<string>)ViewBag.ErrorMessages).Any())
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in (List<string>)ViewBag.ErrorMessages)
                    {
                        <li>@error</li>
                    }
                </ul>
            </div>
        }

        <!-- Edit form for pending reservations -->
        @if (Model.ReservationStatus == BevoBnB.Models.ReservationStatus.Pending)
        {
            <form asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @Html.HiddenFor(model => model.ReservationID)
                @Html.HiddenFor(model => model.Property.PropertyID)
                <div class="form-group">
                    <label asp-for="CheckIn" class="control-label"></label>
                    <input asp-for="CheckIn" class="form-control" type="date" />
                    <span asp-validation-for="CheckIn" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CheckOut" class="control-label"></label>
                    <input asp-for="CheckOut" class="form-control" type="date" />
                    <span asp-validation-for="CheckOut" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NumOfGuests" class="control-label"></label>
                    <input asp-for="NumOfGuests" class="form-control" />
                    <span asp-validation-for="NumOfGuests" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        }

        <!-- Cancel option for valid reservations -->
        @if (Model.ReservationStatus == BevoBnB.Models.ReservationStatus.Valid)
        {
            <div class="alert alert-warning">
                This reservation is valid. You may cancel it if eligible.
            </div>
            <form asp-action="Edit" method="post">
                @Html.HiddenFor(model => model.ReservationID)
                <input type="hidden" name="ReservationStatus" value="Cancelled" />
                <button type="submit" class="btn btn-danger">Cancel Reservation</button>
            </form>
        }

        <!-- Message for canceled reservations -->
        @if (Model.ReservationStatus == BevoBnB.Models.ReservationStatus.Cancelled)
        {
            <div class="alert alert-info">
                This reservation has been canceled. You may rebook at the property's current prices.
            </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>
