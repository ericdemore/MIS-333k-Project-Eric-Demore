@model IEnumerable<BevoBnB.Models.Property>

@{
    ViewData["Title"] = "Index";
}

<h1>Properties</h1>

<!-- General Search Form -->
<form asp-action="Index" method="get" class="mb-4">
    <div class="row g-3">
        <!-- General Search -->
        <!-- Buttons (Placed in a new row below the input) -->
        <div class="col-12 mt-3">
            <a asp-action="Index" class="btn btn-danger me-2">Clear Search</a>
            <!-- Offcanvas Trigger for Detailed Search -->
            <a class="btn btn-light" data-bs-toggle="offcanvas" href="#propertySearchOffcanvas" role="button" aria-controls="propertySearchOffcanvas">
                Detailed Search
            </a>
        </div>
    </div>
    <strong>Showing @ViewBag.SelectedProperties of @ViewBag.AllProperties Properties</strong>
</form>

<!-- Offcanvas for Detailed Search -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="propertySearchOffcanvas" aria-labelledby="propertySearchLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="propertySearchLabel">Property Search</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form asp-action="DisplaySearchResults" method="get">
            <!-- [The detailed search fields remain unchanged for brevity] -->
        </form>
    </div>
</div>

<!-- Results Count -->
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <p>@ViewBag.Message</p>
}

<!-- "Create New" Button -->
@if (User.Identity.IsAuthenticated && User.IsInRole("Host"))
{
    <p>
        <a asp-action="Create" class="btn btn-success">Create New</a>
    </p>
}

<!-- Properties Table -->
<table class="table">
    <thead>
        <tr>
            <!-- Columns visible to Admin -->
            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
            {
                <th>@Html.DisplayNameFor(model => model.PropertyNumber)</th>
                <th>@Html.DisplayNameFor(model => model.User.Email)</th>
            }
            <th>@Html.DisplayNameFor(model => model.Category.CategoryName)</th>
            <th>@Html.DisplayNameFor(model => model.City)</th>
            <th>@Html.DisplayNameFor(model => model.State)</th>
            <th>@Html.DisplayNameFor(model => model.Bedrooms)</th>
            <th>@Html.DisplayNameFor(model => model.Bathrooms)</th>
            <th>@Html.DisplayNameFor(model => model.GuestsAllowed)</th>
            <th>@Html.DisplayNameFor(model => model.PetsAllowed)</th>
            <th>@Html.DisplayNameFor(model => model.FreeParking)</th>
            <th>@Html.DisplayNameFor(model => model.WeekdayPricing)</th>
            <th>@Html.DisplayNameFor(model => model.WeekendPricing)</th>
            <th>@Html.DisplayNameFor(model => model.AverageRating)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Any())
        {
            foreach (var item in Model)
            {
                <tr>
                    <!-- Columns visible to Admin -->
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <td>@Html.DisplayFor(modelItem => item.PropertyNumber)</td>
                        <td>@Html.DisplayFor(modelItem => item.User.Email)</td>
                    }
                    <td>@Html.DisplayFor(modelItem => item.Category.CategoryName)</td>
                    <td>@Html.DisplayFor(modelItem => item.City)</td>
                    <td>@Html.DisplayFor(modelItem => item.State)</td>
                    <td>@Html.DisplayFor(modelItem => item.Bedrooms)</td>
                    <td>@Html.DisplayFor(modelItem => item.Bathrooms)</td>
                    <td>@Html.DisplayFor(modelItem => item.GuestsAllowed)</td>
                    <td>@(item.PetsAllowed ? "Yes" : "No")</td>
                    <td>@(item.FreeParking ? "Yes" : "No")</td>
                    <td>@item.WeekdayPricing.ToString("C")</td>
                    <td>@item.WeekendPricing.ToString("C")</td>
                    <td>
                        @if (item.AverageRating == 0 || item.AverageRating == null)
                        {
                            <span>No Ratings</span>
                        }
                        else
                        {
                            @item.AverageRating.ToString("0.00")
                        }
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.PropertyID">Details</a>

                        <!-- Edit/Delete for Hosts and Admins -->
                        @if (User.Identity.IsAuthenticated && (User.IsInRole("Host") || User.IsInRole("Admin")))
                        {
                            <a asp-action="Edit" asp-route-id="@item.PropertyID" style="margin-left: 10px;">Edit</a>

                            @if (item.PropertyStatus == PropertyStatus.Approved && User.IsInRole("Host") && item.User != null && item.User.Email != null && item.User.Email == User.Identity.Name)
                            {
                                <a asp-action="DeactiveProperty" asp-route-propertyID="@item.PropertyID" class="btn btn-danger" style="margin-top: 10px; display: inline-block;">
                                    Deactivate Property
                                </a>
                                <a asp-action="AddUnavailableDate" asp-route-propertyID="@item.PropertyID" class="btn btn-secondary" style="margin-top: 10px; display: inline-block;">
                                    Add Unavailable Dates
                                </a>
                            }
                            @if (item.PropertyStatus == PropertyStatus.Inactive && User.IsInRole("Host") && item.User.Email == User.Identity.Name)
                            {
                                <a asp-action="ApproveProperty" asp-route-propertyID="@item.PropertyID" class="btn btn-primary">
                                    Approve Property
                                </a>
                            }
                            @if (item.PropertyStatus == PropertyStatus.Unapproved && User.IsInRole("Admin"))
                            {
                                <a asp-action="ApproveProperty" asp-route-propertyID="@item.PropertyID" class="btn btn-success">
                                    Approve Property
                                </a>
                            }
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="11">No properties match your search criteria.</td>
            </tr>
        }
    </tbody>
</table>
