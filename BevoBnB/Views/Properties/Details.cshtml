@model BevoBnB.Models.Property

@{
    ViewData["Title"] = "Property Details";
}

<h1>Property Details</h1>

 <!-- Display the Average Rating -->
<h3>
    <!-- Display the numeric average rating -->
    Average Rating: @if (ViewBag.AvgRating != null && ViewBag.AvgRating != "No Ratings Yet")
    {
        <span>@ViewBag.AvgRating</span>
        <span>
            @* Declare avgRating for clarity *@
            @{
                double avgRating = Convert.ToDouble(ViewBag.AvgRating);
            }

            <!-- Loop through 1 to 5 for a total of 5 stars -->
            @for (int i = 1; i <= 5; i++)
            {
                if (i <= Math.Floor(avgRating))
                {
                    <!-- Fully filled star (dark blue) -->
                    <i class="fas fa-star" style="color: #123456; margin-right: 2px;"></i> <!-- Tailwind's blue-800 -->
                }
                else if (i == Math.Ceiling(avgRating) && avgRating % 1 >= 0.5)
                {
                    <!-- Half-filled star (dark blue) -->
                    <i class="fas fa-star-half-alt" style="color: #123456; margin-right: 2px;"></i>
                }
                else
                {
                    <!-- Empty star (gray) -->
                    <i class="far fa-star" style="color: #6c757d; margin-right: 2px;"></i> <!-- Bootstrap's text-muted gray -->
                }
            }
        </span>
    }
    else
    {
        <span>No Ratings Yet</span>
    }
</h3>







<div>
    <h4>Property</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PropertyNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PropertyNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Bedrooms)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Bedrooms)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Bathrooms)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Bathrooms)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GuestsAllowed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GuestsAllowed)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PetsAllowed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PetsAllowed)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FreeParking)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FreeParking)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WeekdayPricing)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.WeekdayPricing)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.WeekendPricing)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.WeekendPricing)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CleaningFee)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CleaningFee)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DiscountRate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DiscountRate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.MinNightsforDiscount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.MinNightsforDiscount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UnavailableDates)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UnavailableDates)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PropertyStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PropertyStatus)
        </dd>
    </dl>
</div>


<h2>Reviews</h2>
@if (Model.Reviews != null && Model.Reviews.Any())
{
    // Filter and sort reviews - only show non-disputed and invalid dispute reviews
    var validReviews = Model.Reviews
        .Where(r => r.DisputeStatus == DisputeStatus.NoDispute || r.DisputeStatus == DisputeStatus.InvalidDispute)
        .OrderByDescending(r => r.Rating);

    if (validReviews.Any())
    {
        <table class="table" style="border-collapse: collapse; width: 100%;">
            <thead>
                <tr style="border-bottom: 2px solid black;">
                    <th style="border-right: 2px solid black;">Rating</th>
                    <th style="border-right: 2px solid black;">Customer Comment</th>
                    <th style="border-right: 2px solid black;">Host Comment</th>
                    <th>Status</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var review in validReviews)
                {
                    <tr>
                        <!-- Rating column with bold text and right border -->
                        <td style="font-weight: bold; border-right: 2px solid black; text-align: center;">
                            @Html.DisplayFor(modelItem => review.Rating)
                        </td>
                        <!-- Customer Comment with conditional check and right border -->
                        <td style="white-space: normal; word-wrap: break-word; border-right: 2px solid black; padding: 10px;">
                            @if (!string.IsNullOrEmpty(review.ReviewText))
                            {
                                @Html.DisplayFor(modelItem => review.ReviewText)
                            }
                            else
                            {
                                <span style="font-style: italic; color: gray;">No customer comments available.</span>
                            }
                        </td>
                        <!-- Host Comment with conditional check and right border -->
                        <td style="white-space: normal; word-wrap: break-word; border-right: 2px solid black; padding: 10px;">
                            @if (!string.IsNullOrEmpty(review.HostComments))
                            {
                                @Html.DisplayFor(modelItem => review.HostComments)
                            }
                            else
                            {
                                <span style="font-style: italic; color: gray;">No host comments available.</span>
                            }
                        </td>
                        <!-- Dispute Status -->
                        <td style="text-align: center;">
                            @if (review.DisputeStatus == DisputeStatus.InvalidDispute)
                            {
                                <span class="badge bg-warning">Dispute Rejected</span>
                            }
                        </td>
                        <!-- Details column -->
                        <td style="text-align: center;">
                            <a asp-action="Details" asp-controller="Reviews" asp-route-id="@review.ReviewID">View Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No valid reviews available for this property.</p>
    }
}
else
{
    <p>No reviews available for this property.</p>
}

@if (User.Identity.IsAuthenticated)
{
    if (User.IsInRole("Customer"))
    {
                        <div>
                            <a asp-action="Create" asp-controller="Reservations" asp-route-propertyID="@Model.PropertyID">Reserve Property</a>
                        </div>
    }

    if (User.IsInRole("Admin"))
    {
                        <div>
                            <a asp-action="SelectCustomerForRegistration" asp-controller="Reservations" asp-route-propertyID="@Model.PropertyID">Reserve Property</a>
                        </div>
    }
}
<div>
    <a asp-action="Edit" asp-route-id="@Model?.PropertyID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
