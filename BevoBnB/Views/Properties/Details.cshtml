@model BevoBnB.Models.Property

@{
    ViewData["Title"] = "Property Details";
}

<h1 class="text-primary text-center mb-4">Property Details</h1>

<!-- Display the Average Rating -->
<div class="text-center mb-4">
    <h3>
        Average Rating:
        @if (ViewBag.AvgRating != null && ViewBag.AvgRating != "No Ratings Yet")
        {
            <span class="fw-bold">@ViewBag.AvgRating</span>
            <span>
                @* Display stars based on the average rating *@
                @{
                    double avgRating = Convert.ToDouble(ViewBag.AvgRating);
                }
                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= Math.Floor(avgRating))
                    {
                        <i class="fas fa-star text-warning me-1"></i> <!-- Filled star -->
                    }
                    else if (i == Math.Ceiling(avgRating) && avgRating % 1 >= 0.5)
                    {
                        <i class="fas fa-star-half-alt text-warning me-1"></i> <!-- Half star -->
                    }
                    else
                    {
                        <i class="far fa-star text-muted me-1"></i> <!-- Empty star -->
                    }
                }
            </span>
        }
        else
        {
            <span class="text-muted">No Ratings Yet</span>
        }
    </h3>
</div>

<!-- Property Details -->
<div class="card shadow-sm mb-4">
    <div class="card-header bg-primary text-white">
        <h4>Property Information</h4>
    </div>
    <div class="card-body">
        <dl class="row">
            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.PropertyNumber)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.PropertyNumber)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.StreetAddress)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.StreetAddress)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.City)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.City)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.State)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.State)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.ZipCode)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.ZipCode)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.Bedrooms)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.Bedrooms)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.Bathrooms)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.Bathrooms)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.GuestsAllowed)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.GuestsAllowed)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.PetsAllowed)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.PetsAllowed)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.FreeParking)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.FreeParking)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.WeekdayPricing)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.WeekdayPricing)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.WeekendPricing)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.WeekendPricing)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.CleaningFee)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.CleaningFee)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.DiscountRate)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.DiscountRate)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.MinNightsforDiscount)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.MinNightsforDiscount)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.UnavailableDates)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.UnavailableDates)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.PropertyStatus)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.PropertyStatus)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.Category)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.Category)</dd>

            <dt class="col-sm-4 fw-bold">@Html.DisplayNameFor(model => model.User.UserName)</dt>
            <dd class="col-sm-8">@Html.DisplayFor(model => model.User.UserName)</dd>
        </dl>
    </div>
</div>

<!-- Reviews Section -->
<h2 class="mt-5 mb-4 text-primary">Reviews</h2>
@if (Model.Reviews != null && Model.Reviews.Any())
{
    <!-- Filter and display reviews -->
    var validReviews = Model.Reviews
        .Where(r => r.DisputeStatus == DisputeStatus.NoDispute || r.DisputeStatus == DisputeStatus.InvalidDispute)
        .OrderByDescending(r => r.Rating);

    if (validReviews.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Rating</th>
                        <th>Customer Comment</th>
                        <th>Host Comment</th>
                        <th>Status</th>
                        <th>Details</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var review in validReviews)
                    {
                        <tr>
                            <td class="text-center">@Html.DisplayFor(modelItem => review.Rating)</td>
                            <td>
                                @if (!string.IsNullOrEmpty(review.ReviewText))
                                {
                                    @Html.DisplayFor(modelItem => review.ReviewText)
                                }
                                else
                                {
                                    <span class="text-muted fst-italic">No customer comments available.</span>
                                }
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(review.HostComments))
                                {
                                    @Html.DisplayFor(modelItem => review.HostComments)
                                }
                                else
                                {
                                    <span class="text-muted fst-italic">No host comments available.</span>
                                }
                            </td>
                            <td>
                                @if (review.DisputeStatus == DisputeStatus.InvalidDispute)
                                {
                                    <span class="badge bg-warning text-dark">Dispute Rejected</span>
                                }
                                else
                                {
                                    <span class="badge bg-success">Valid</span>
                                }
                            </td>
                            <td>
                                @if (User.IsInRole("Admin") || User.IsInRole("Host"))
                                {
                                    <a asp-action="Details" asp-controller="Reviews" asp-route-id="@review.ReviewID" class="btn btn-primary btn-sm">View Details</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="text-muted">No valid reviews available for this property.</p>
    }
}
else
{
    <p class="text-muted">No reviews available for this property.</p>
}

<!-- Reservation Buttons -->
@if (User.Identity.IsAuthenticated && User.IsInRole("Customer") && !User.IsInRole("Host"))
{
    <div class="text-center mt-4">
        <a asp-action="Create" asp-controller="Reservations" asp-route-propertyID="@Model.PropertyID" class="btn btn-success">Reserve Property</a>
    </div>
}

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <div class="text-center mt-4">
        <a asp-action="SelectCustomerForRegistration" asp-controller="Reservations" asp-route-propertyID="@Model.PropertyID" class="btn btn-success">Reserve Property for Customer</a>
    </div>
}
else {
<div class="text-center mt-4">
    <a asp-action="Create" asp-controller="Reservations" asp-route-propertyID="@Model.PropertyID" class="btn btn-success">Reserve Property</a>
</div>
}


<!-- Edit and Back Buttons -->
<div class="mt-5 text-center">
    <a asp-action="Edit" asp-route-id="@Model?.PropertyID" class="btn btn-primary">Edit Property</a>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<h2 class="mt-5 mb-4 text-primary">Upcoming Reservations</h2>
@if (ViewBag.UpcomingReservations != null && ((List<BevoBnB.Models.Reservation>)ViewBag.UpcomingReservations).Any())
{
    <div class="table-responsive">
        <table class="table table-striped">
            <thead class="table-dark">
                <tr>
                    <th>Check-In</th>
                    <th>Check-Out</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var reservation in (List<BevoBnB.Models.Reservation>)ViewBag.UpcomingReservations)
                {
                    <tr>
                        <td>@reservation.CheckIn.ToString("MM/dd/yyyy")</td>
                        <td>@reservation.CheckOut.ToString("MM/dd/yyyy")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p class="text-muted">There are no upcoming reservations for this property.</p>
}